j <- 15
############
### SITE ###
############
X <- cbind(
rep(1, nrow(region)),
region$elev
)
p_site <- ncol(X)
betas <- matrix(c(0, 1), nrow = p_site)
# spatial
dist <- distance(coords)
sigma <- 1
rho <- 1
# Sigma <- c.expcov(dist, rho, sigma)
Sigma <- c.dexpcov(dist, rho, sigma)
Sigma[1:10, 1:10]
# latent occupancy
eta <- rmvnorm.rcpp(1, rep(0, nrow(region)), Sigma)
bind_cols(region, eta = c(eta)) %>%
ggplot() +
geom_sf(aes(geometry = geometry, fill = eta), size = .1) +
theme_bw() +
labs(title = "Spatial random effects across region") +
viridis::scale_fill_viridis(option = "magma")
result[i, j] <- sigma2 * exp((-1/2) * (1/rho2) * dists[i,j] * dists[i,j])
dexpcov <- nimbleFunction(
run = function(dists = double(2), rho = double(0), sigma = double(0)) {
returnType(double(2))
n <- dim(dists)[1]
result <- matrix(nrow = n, ncol = n, init = FALSE)
sigma2 <- sigma*sigma
rho2 <- rho * rho
for(i in 1:n)
for(j in 1:n)
result[i, j] <- sigma2 * exp((-1/2) * (1/rho2) * dists[i,j] * dists[i,j])
return(result)
}
)
c.dexpcov <- compileNimble(dexpcov)
# simulate data
set.seed(02232021)
j <- 15
############
### SITE ###
############
X <- cbind(
rep(1, nrow(region)),
region$elev
)
p_site <- ncol(X)
betas <- matrix(c(0, 1), nrow = p_site)
# spatial
dist <- distance(coords)
sigma <- 1
rho <- 1
# Sigma <- c.expcov(dist, rho, sigma)
Sigma <- c.dexpcov(dist, rho, sigma)
Sigma[1:10, 1:10]
# simulate data
set.seed(02232021)
j <- 15
############
### SITE ###
############
X <- cbind(
rep(1, nrow(region)),
region$elev
)
p_site <- ncol(X)
betas <- matrix(c(0, 1), nrow = p_site)
# spatial
dist <- distance(coords)
sigma <- 1
rho <- 1
# Sigma <- c.expcov(dist, rho, sigma)
Sigma <- c.dexpcov(dist, rho, sigma)
Sigma[1:10, 1:10]
# latent occupancy
eta <- rmvnorm.rcpp(1, rep(0, nrow(region)), Sigma)
bind_cols(region, eta = c(eta)) %>%
ggplot() +
geom_sf(aes(geometry = geometry, fill = eta), size = .1) +
theme_bw() +
labs(title = "Spatial random effects across region") +
viridis::scale_fill_viridis(option = "magma")
# simulate data
set.seed(02232021)
j <- 15
############
### SITE ###
############
X <- cbind(
rep(1, nrow(region)),
region$elev
)
p_site <- ncol(X)
betas <- matrix(c(0, 1), nrow = p_site)
# spatial
dist <- distance(coords)
sigma <- 1
rho <- 2
# Sigma <- c.expcov(dist, rho, sigma)
Sigma <- c.dexpcov(dist, rho, sigma)
Sigma[1:10, 1:10]
# simulate data
set.seed(02232021)
j <- 15
############
### SITE ###
############
X <- cbind(
rep(1, nrow(region)),
region$elev
)
p_site <- ncol(X)
betas <- matrix(c(0, 1), nrow = p_site)
# spatial
dist <- distance(coords)
sigma <- 1
rho <- 2
# Sigma <- c.expcov(dist, rho, sigma)
Sigma <- c.dexpcov(dist, rho, sigma)
Sigma[1:10, 1:10]
# latent occupancy
eta <- rmvnorm.rcpp(1, rep(0, nrow(region)), Sigma)
bind_cols(region, eta = c(eta)) %>%
ggplot() +
geom_sf(aes(geometry = geometry, fill = eta), size = .1) +
theme_bw() +
labs(title = "Spatial random effects across region") +
viridis::scale_fill_viridis(option = "magma")
# simulate data
set.seed(02232021)
j <- 15
############
### SITE ###
############
X <- cbind(
rep(1, nrow(region)),
region$elev
)
p_site <- ncol(X)
betas <- matrix(c(0, 1), nrow = p_site)
# spatial
dist <- distance(coords)
sigma <- 1
rho <- max(dist) / 10
# Sigma <- c.expcov(dist, rho, sigma)
Sigma <- c.dexpcov(dist, rho, sigma)
Sigma[1:10, 1:10]
# latent occupancy
eta <- rmvnorm.rcpp(1, rep(0, nrow(region)), Sigma)
bind_cols(region, eta = c(eta)) %>%
ggplot() +
geom_sf(aes(geometry = geometry, fill = eta), size = .1) +
theme_bw() +
labs(title = "Spatial random effects across region") +
viridis::scale_fill_viridis(option = "magma")
dist
set.seed(02232021)
j <- 15
############
### SITE ###
############
X <- cbind(
rep(1, nrow(region)),
region$elev
)
p_site <- ncol(X)
betas <- matrix(c(0, 1), nrow = p_site)
# spatial
dist <- distance(coords)
sigma <- 1
rho <- max(dist) / 10
# Sigma <- c.expcov(dist, rho, sigma)
Sigma <- c.dexpcov(dist, rho, sigma)
Sigma[1:10, 1:10]
rm(eta)
# simulate data
set.seed(02232021)
j <- 15
############
### SITE ###
############
X <- cbind(
rep(1, nrow(region)),
region$elev
)
p_site <- ncol(X)
betas <- matrix(c(0, 1), nrow = p_site)
# spatial
dist <- distance(coords)
sigma <- 1
rho <- max(dist) / 10
# Sigma <- c.expcov(dist, rho, sigma)
Sigma <- c.dexpcov(dist, rho, sigma)
Sigma[1:10, 1:10]
# latent occupancy
eta <- rmvnorm.rcpp(1, rep(0, nrow(region)), Sigma)
bind_cols(region, eta = c(eta)) %>%
ggplot() +
geom_sf(aes(geometry = geometry, fill = eta), size = .1) +
theme_bw() +
labs(title = "Spatial random effects across region") +
viridis::scale_fill_viridis(option = "magma")
# simulate data
set.seed(02232021)
j <- 15
############
### SITE ###
############
X <- cbind(
rep(1, nrow(region)),
region$elev
)
p_site <- ncol(X)
betas <- matrix(c(0, 1), nrow = p_site)
# spatial
dist <- distance(coords)
sigma <- 1
rho <- max(dist)
# Sigma <- c.expcov(dist, rho, sigma)
Sigma <- c.dexpcov(dist, rho, sigma)
Sigma[1:10, 1:10]
# latent occupancy
eta <- rmvnorm.rcpp(1, rep(0, nrow(region)), Sigma)
bind_cols(region, eta = c(eta)) %>%
ggplot() +
geom_sf(aes(geometry = geometry, fill = eta), size = .1) +
theme_bw() +
labs(title = "Spatial random effects across region") +
viridis::scale_fill_viridis(option = "magma")
set.seed(02232021)
j <- 15
############
### SITE ###
############
X <- cbind(
rep(1, nrow(region)),
region$elev
)
p_site <- ncol(X)
betas <- matrix(c(0, 1), nrow = p_site)
# spatial
dist <- distance(coords)
sigma <- 1
rho <- max(dist)
# Sigma <- c.expcov(dist, rho, sigma)
Sigma <- c.dexpcov(dist, rho, sigma)
Sigma[1:10, 1:10]
# simulate data
set.seed(02232021)
j <- 15
############
### SITE ###
############
X <- cbind(
rep(1, nrow(region)),
region$elev
)
p_site <- ncol(X)
betas <- matrix(c(0, 1), nrow = p_site)
# spatial
dist <- distance(coords)
sigma <- 1
rho <- 2
# Sigma <- c.expcov(dist, rho, sigma)
Sigma <- c.dexpcov(dist, rho, sigma)
Sigma[1:10, 1:10]
# latent occupancy
eta <- rmvnorm.rcpp(1, rep(0, nrow(region)), Sigma)
bind_cols(region, eta = c(eta)) %>%
ggplot() +
geom_sf(aes(geometry = geometry, fill = eta), size = .1) +
theme_bw() +
labs(title = "Spatial random effects across region") +
viridis::scale_fill_viridis(option = "magma")
# simulate data
set.seed(02232021)
j <- 15
############
### SITE ###
############
X <- cbind(
rep(1, nrow(region)),
region$elev
)
p_site <- ncol(X)
betas <- matrix(c(0, 1), nrow = p_site)
# spatial
dist <- distance(coords)
sigma <- 1
rho <- 2
# Sigma <- c.expcov(dist, rho, sigma)
Sigma <- c.dexpcov(dist, rho, sigma)
Sigma[1:10, 1:10]
# latent occupancy
eta <- rmvnorm.rcpp(1, rep(0, nrow(region)), Sigma)
bind_cols(region, eta = c(eta)) %>%
ggplot() +
geom_sf(aes(geometry = geometry, fill = eta), size = .1) +
theme_bw() +
labs(title = "Spatial random effects across region") +
viridis::scale_fill_viridis(option = "magma")
psi <- exp(X %*% betas + c(eta)) / (1 + exp(X %*% betas + c(eta)))
bind_cols(region, psi = c(psi)) %>%
ggplot() +
geom_sf(aes(geometry = geometry, fill = psi), size = .1) +
theme_bw() +
labs(title = "Psi across region") +
viridis::scale_fill_viridis(option = "magma", limits = c(0,1))
# simulate data
set.seed(02232021)
j <- 15
############
### SITE ###
############
X <- cbind(
rep(1, nrow(region)),
region$elev
)
p_site <- ncol(X)
betas <- matrix(c(0, 1), nrow = p_site)
# spatial
dist <- distance(coords)
sigma <- 1
rho <- 2
# Sigma <- c.expcov(dist, rho, sigma)
Sigma <- c.dexpcov(dist, rho, sigma)
Sigma[1:10, 1:10]
# latent occupancy
eta <- rmvnorm.rcpp(1, rep(0, nrow(region)), Sigma)
bind_cols(region, eta = c(eta)) %>%
ggplot() +
geom_sf(aes(geometry = geometry, fill = eta), size = .1) +
theme_bw() +
labs(title = "Spatial random effects across region") +
viridis::scale_fill_viridis(option = "magma")
psi <- exp(X %*% betas + c(eta)) / (1 + exp(X %*% betas + c(eta)))
bind_cols(region, psi = c(psi)) %>%
ggplot() +
geom_sf(aes(geometry = geometry, fill = psi), size = .1) +
theme_bw() +
labs(title = "Psi across region") +
viridis::scale_fill_viridis(option = "magma", limits = c(0,1))
z <- rbinom(nrow(region), 1, psi)
bind_cols(region, z = factor(z)) %>%
ggplot() +
geom_sf(aes(geometry = geometry, fill = z), size = .1) +
theme_bw() +
labs(title = "Z across region")
# simulate data
set.seed(02232021)
j <- 15
############
### SITE ###
############
X <- cbind(
rep(1, nrow(region)),
region$elev
)
p_site <- ncol(X)
betas <- matrix(c(0, 1), nrow = p_site)
# spatial
dist <- distance(coords)
sigma <- 1
rho <- 2
# Sigma <- c.expcov(dist, rho, sigma)
Sigma <- c.dexpcov(dist, rho, sigma)
Sigma[1:10, 1:10]
# latent occupancy
eta <- rmvnorm.rcpp(1, rep(0, nrow(region)), Sigma)
bind_cols(region, eta = c(eta)) %>%
ggplot() +
geom_sf(aes(geometry = geometry, fill = eta), size = .1) +
theme_bw() +
labs(title = "Spatial random effects across region") +
viridis::scale_fill_viridis(option = "magma")
psi <- exp(X %*% betas + c(eta)) / (1 + exp(X %*% betas + c(eta)))
bind_cols(region, psi = c(psi)) %>%
ggplot() +
geom_sf(aes(geometry = geometry, fill = psi), size = .1) +
theme_bw() +
labs(title = "Psi across region") +
viridis::scale_fill_viridis(option = "magma", limits = c(0,1))
z <- rbinom(nrow(region), 1, psi)
bind_cols(region, z = factor(z)) %>%
ggplot() +
geom_sf(aes(geometry = geometry, fill = z), size = .1) +
theme_bw() +
labs(title = "Z across region")
#############
### VISIT ###
#############
p_rep <- 2
alphas <- matrix(c(0, 1), ncol = 1)
W <- array(0, dim = c(nrow(region), j, p_rep))
for(i in 1:(dim(W)[3])){
if(i == 1) {
W[,,i] <- 1
} else{
W[,,i] <- rnorm(nrow(region)*j)
}
}
Y <- matrix(0, nrow(region), j)
p <- matrix(0, nrow(region), j)
for(i in 1:nrow(region)){
for(k in 1:j){
tmp <- alphas[1,1] * W[i,k,1] + alphas[2,1] * W[i,k,2]
p[i,k] <- exp(tmp) / (1 + exp(tmp))
Y[i,k] <- rbinom(1, 1, z[i] * p[i,k])
}
}
##############
### Sample ###
##############
n <- 400
index <- sort(sample(1:nrow(region), size = n, replace = FALSE))
dist_ <- distance(coords[index,])
data <- list(
Y = Y[index,],
W = W[index,,],
X = X[index,],
nsites = n,
nvisits = j,
pocc = p_site,
pdet = p_rep,
dist = dist_
)
saveRDS(data, file = "rds files/spom/spom_data.rds")
dist_ == dist
all(dist_ == dist)
data <- readRDS("rds files/spom/spom_data.rds")
fit_spom <- function(constants, data, inits, niter = 5000){
# code
code <- nimbleCode({
# regression coefficients
for(i in 1:pocc){
beta[i] ~ dnorm(0, sd = 2)
}
for(i in 1:pdet){
alpha[i] ~ dnorm(0, sd = 2)
}
# spatial parameters
for(i in 1:nsites){
mu[i] <- beta[1] + beta[2] * x[i]
}
rho ~ dunif(.1, 2.687006)
sigma ~ T(dnorm(0, sd = 1), 0, Inf)
covmat[1:nsites, 1:nsites] <- dexpcov(
dists = dist[1:nsites, 1:nsites],
rho = rho,
sigma = sigma
)
eta[1:nsites] ~ dmnorm(mu[1:nsites], cov = covmat[1:nsites, 1:nsites])
# likelihood
for(site in 1:nsites){
# logit(psi[site]) <- beta[1] + beta[2] * x[site] + eta[site]
logit(psi[site]) <- eta[site]
z[site] ~ dbern(psi[site])
for(visit in 1:nvisits){
logit(p[site, visit]) <- alpha[1] + alpha[2] * W[site, visit, 2]
Y[site, visit] ~ dbern(z[site] * p[site, visit])
}
}
})
# R model
model <- nimbleModel(code, constants, data, inits)
# C model
model_c <- compileNimble(model)
# R mcmc
monitors <- c("beta", "alpha", "sigma", "rho")
model_conf <- configureMCMC(model, monitors = monitors)
# model_conf$removeSamplers("eta[1:400]")
# model_conf$addSampler("eta[1:400]", "RW_block", control = list(scale = 0.1))
mcmc <- buildMCMC(model_conf)
# C mcmc
mcmc_c <- compileNimble(mcmc)
# run
mcmc_c$run(niter)
# get samples
samples <- as.matrix(mcmc_c$mvSamples)
# out
out <- list(samples = samples)
return(out)
}
fit <- fit_spom(
constants = list(
pocc = data$pocc,
pdet = data$pdet,
nsites = data$nsites,
nvisits = data$nvisits,
maxd = max(dist)
),
data = list(
Y = data$Y,
x = data$X[,2],
W = data$W,
# ones = rep(1, nrow(data$X)),
dist = data$dist
),
inits = list(
z = apply(data$Y, 1, function(x) ifelse(sum(x) == 0, 0, 1)),
alpha = rnorm(2),
beta = rnorm(2),
rho = runif(1, .1, 2.687006),
sigma = 1
# mu0 = 0
),
niter = 10000
)
